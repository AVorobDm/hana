language: cpp
compiler: clang
os: linux

env:
  - CLANG_VERSION=3.5 BOOST_VERSION=1.57.0
  - CLANG_VERSION=3.6 BOOST_VERSION=1.57.0
  - CLANG_VERSION=3.7 BOOST_VERSION=1.57.0

  - CLANG_VERSION=3.5 BOOST_VERSION=1.58.0
  - CLANG_VERSION=3.6 BOOST_VERSION=1.58.0
  - CLANG_VERSION=3.7 BOOST_VERSION=1.58.0


before_install:
    # All the dependencies are installed to the deps/ subdirectory.
    - mkdir deps
    - DEPS_DIR="${PWD}/deps"

    # Add deb repositories to get different versions of LLVM/Clang.
    # The latest version of those repositories doesn't need a -3.x suffix,
    # so we jump through the little hoop with _suffix below.
    - sudo apt-add-repository "deb http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu precise main"
    - if [ "${CLANG_VERSION}" != "3.7" ]; then _suffix="-${CLANG_VERSION}"; fi
    - sudo apt-add-repository "deb http://llvm.org/apt/precise/ llvm-toolchain-precise${_suffix} main"
    - sudo apt-get -qq update

    # Checkout the latest libc++
    - svn --quiet co http://llvm.org/svn/llvm-project/libcxx/trunk ${DEPS_DIR}/libcxx

    # Install Boost headers
    - if [ "${BOOST_VERSION}" == "1.57.0" ]; then wget --quiet -O ${DEPS_DIR}/boost.tar.gz http://sourceforge.net/projects/boost/files/boost/1.57.0/boost_1_57_0.tar.gz; fi
    - if [ "${BOOST_VERSION}" == "1.58.0" ]; then wget --quiet -O ${DEPS_DIR}/boost.tar.gz http://sourceforge.net/projects/boost/files/boost/1.58.0.beta.1/boost_1_58_0_b1.tar.gz; fi
    - mkdir ${DEPS_DIR}/boost && tar --strip-components=1 -C ${DEPS_DIR}/boost -xzf ${DEPS_DIR}/boost.tar.gz


install:
    # Install Clang
    - sudo apt-get -qq --allow-unauthenticated install clang-${CLANG_VERSION}

    # Install a more recent CMake
    - wget --quiet -O ${DEPS_DIR}/cmake.tar.gz http://www.cmake.org/files/v3.2/cmake-3.2.1-Linux-x86_64.tar.gz
    - mkdir ${DEPS_DIR}/cmake && tar --strip-components=1 -C ${DEPS_DIR}/cmake -xzf ${DEPS_DIR}/cmake.tar.gz
    - export PATH=${DEPS_DIR}/cmake/bin:${PATH}

    # Install libc++
    - (cd ${DEPS_DIR}/libcxx/lib && bash buildit)
    - sudo cp ${DEPS_DIR}/libcxx/lib/libc++.so.1.0 /usr/lib/
    - sudo mkdir /usr/include/c++/v1
    - sudo cp -r ${DEPS_DIR}/libcxx/include/* /usr/include/c++/v1/
    - sudo ln -sf /usr/lib/libc++.so.1.0 /usr/lib/libc++.so
    - sudo ln -sf /usr/lib/libc++.so.1.0 /usr/lib/libc++.so.1

    # Setup the build directory
    - (mkdir build && cd build && cmake .. -DCMAKE_CXX_COMPILER=clang++-${CLANG_VERSION} -DBOOST_ROOT=${DEPS_DIR}/boost)


before_script:
    # Check baseline memory usage; for compare with after_failure when OOMs occur
    - free
    - vmstat
    - ps aux --sort=-rss | head -n 10


script:
    # We use the -k switch because it will cause the build to continue even
    # when there's a failure. However, the tests will still globally fail
    # (as expected) because running ctest will fail.
    - (cd build && make run.all -k)


after_failure:
    # check for OOMs
    - sudo dmesg
    - free
    - vmstat
    - ps aux --sort=-rss
